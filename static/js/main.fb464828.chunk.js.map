{"version":3,"sources":["logo.svg","components/algorithms/bubbleSort.js","components/algorithms/insertionSort.js","components/algorithms/mergeSort.js","components/algorithms/quickSort.js","components/algorithms/selectionSort.js","components/algorithms/heapSort.js","components/visualizer.js","App.js","reportWebVitals.js","index.js"],"names":["bubbleSort","array","animations","array_len","length","i","j","temp","push","insertionSort","curr_val","pointer","mergeSort","l","r","m","Math","floor","merge","size1","size2","a1","a2","k","quickSort","p","partition","pivot","selectionSort","min_index","heapSort","heapify","n","largest","PRIMARY_COLOR","SECONDARY_COLOR","Visualizer","props","state","rand_nums","this","reset","RAND_NUMS","randIntInterval","setState","arrayBars","document","getElementsByClassName","style","backgroundColor","getBubbleSortAnimations","barOneIdx","barTwoIdex","barOneStyle","barTwoStyle","color","setTimeout","newHeight","height","getInsertionSortAnimations","action","getSelectionSortAnimations","getHeapSortAnimations","getMergeSortAnimations","getQuickSortAnimations","nums","elements","className","Fragment","class","paddingLeft","type","data-toggle","data-target","id","role","cursor","background","onClick","paddingRight","React","Component","min","max","ceil","random","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fb464828.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export default function getBubbleSortAnimations(array) {\r\n  const animations = [];\r\n  bubbleSort(array, animations);\r\n  return animations;\r\n}\r\n\r\nconst bubbleSort = (array, animations) => {\r\n  let array_len = array.length;\r\n\r\n  for (let i = 0; i < array_len - 1; i++) {\r\n    for (let j = 0; j < array_len - i - 1; j++) {\r\n      if (array[j] > array[j + 1]) {\r\n        let temp = array[j];\r\n        array[j] = array[j + 1];\r\n        array[j + 1] = temp;\r\n        animations.push([j, j + 1]);\r\n        animations.push([j, j + 1]);\r\n        animations.push([j, array[j]]);\r\n        animations.push([j + 1, array[j + 1]]);\r\n      }\r\n    }\r\n  }\r\n};\r\n","export default function getInsertionSortAnimations(array) {\r\n  const animations = [];\r\n  insertionSort(array, animations);\r\n  return animations;\r\n}\r\n\r\nconst insertionSort = (array, animations) => {\r\n  let array_len = array.length;\r\n  for (let i = 1; i < array_len; i++) {\r\n    let curr_val = array[i];\r\n    let pointer = i - 1;\r\n\r\n    while (pointer >= 0 && curr_val < array[pointer]) {\r\n      animations.push([\"c1\", pointer, i]);\r\n      animations.push([\"c2\", pointer, i]);\r\n      animations.push([\"swap\", pointer + 1, array[pointer]]);\r\n      array[pointer + 1] = array[pointer];\r\n      pointer--;\r\n    }\r\n    animations.push([\"swap\", pointer + 1, curr_val]);\r\n    array[pointer + 1] = curr_val;\r\n  }\r\n};\r\n","export default function getMergeSortAnimations(array) {\r\n  const animations = [];\r\n  mergeSort(array, 0, array.length - 1, animations);\r\n  return animations;\r\n}\r\n\r\nconst mergeSort = (array, l, r, animations) => {\r\n  if (l < r) {\r\n    let m = Math.floor((l + r) / 2);\r\n    mergeSort(array, l, m, animations);\r\n    mergeSort(array, m + 1, r, animations);\r\n    merge(array, l, m, r, animations);\r\n  }\r\n};\r\n\r\nconst merge = (array, l, m, r, animations) => {\r\n  let size1 = m - l + 1;\r\n  let size2 = r - m;\r\n  let a1 = [];\r\n  let a2 = [];\r\n\r\n  for (let i = 0; i < size1; i++) {\r\n    a1.push(array[l + i]);\r\n  }\r\n\r\n  for (let i = 0; i < size2; i++) {\r\n    a2.push(array[m + 1 + i]);\r\n  }\r\n\r\n  let i = 0;\r\n  let j = 0;\r\n  let k = l;\r\n  while (i < size1 && j < size2) {\r\n    animations.push([\"c1\", l + i, l + j]);\r\n    animations.push([\"c2\", l + i, l + j]);\r\n    if (a1[i] <= a2[j]) {\r\n      animations.push([\"swap\", k, a1[i]]);\r\n      array[k] = a1[i];\r\n      i++;\r\n    } else {\r\n      animations.push([\"swap\", k, a2[j]]);\r\n      array[k] = a2[j];\r\n      j++;\r\n    }\r\n    k++;\r\n  }\r\n  while (i < size1) {\r\n    animations.push([\"c1\", k, k]);\r\n    animations.push([\"c2\", k, k]);\r\n    animations.push([\"swap\", k, a1[i]]);\r\n    array[k] = a1[i];\r\n    i++;\r\n    k++;\r\n  }\r\n  while (j < size2) {\r\n    animations.push([\"c1\", k, k]);\r\n    animations.push([\"c2\", k, k]);\r\n    animations.push([\"swap\", k, a2[j]]);\r\n    array[k] = a2[j];\r\n    j++;\r\n    k++;\r\n  }\r\n};\r\n","export default function getQuickSortAnimations(array) {\r\n  const animations = [];\r\n  quickSort(array, 0, array.length - 1, animations);\r\n  return animations;\r\n}\r\n\r\nconst quickSort = (array, l, r, animations) => {\r\n  if (l < r) {\r\n    let p = partition(array, l, r, animations);\r\n\r\n    quickSort(array, l, p - 1, animations);\r\n    quickSort(array, p + 1, r, animations);\r\n  }\r\n};\r\n\r\nconst partition = (array, l, r, animations) => {\r\n  let pivot = array[r];\r\n  //   let i = l - 1;\r\n  let i = l;\r\n  for (let j = l; j < r; j++) {\r\n    if (array[j] < pivot) {\r\n      //   i++;\r\n      let temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n      animations.push([i, j]);\r\n      animations.push([i, j]);\r\n      animations.push([i, array[i]]);\r\n      animations.push([j, array[j]]);\r\n\r\n      i++;\r\n    }\r\n  }\r\n  let temp = array[i];\r\n  array[i] = array[r];\r\n  array[r] = temp;\r\n  animations.push([i, r]);\r\n  animations.push([i, r]);\r\n  animations.push([i, array[i]]);\r\n  animations.push([r, array[r]]);\r\n\r\n  return i;\r\n};\r\n","export default function getSelectionSortAnimations(array) {\r\n  const animations = [];\r\n  selectionSort(array, animations);\r\n  return animations;\r\n}\r\n\r\nconst selectionSort = (array, animations) => {\r\n  let array_len = array.length;\r\n\r\n  for (let i = 0; i < array_len - 1; i++) {\r\n    let min_index = i;\r\n    for (let j = i + 1; j < array_len; j++) {\r\n      animations.push([\"c1\", i, min_index]);\r\n      animations.push([\"c2\", i, min_index]);\r\n      if (array[j] < array[min_index]) {\r\n        min_index = j;\r\n      }\r\n    }\r\n    let temp = array[i];\r\n    array[i] = array[min_index];\r\n    array[min_index] = temp;\r\n    animations.push([\"swap\", i, array[i]]);\r\n    animations.push([\"swap\", min_index, array[min_index]]);\r\n  }\r\n};\r\n","export default function getHeapSortAnimations(array) {\r\n  const animations = [];\r\n  heapSort(array, animations);\r\n  return animations;\r\n}\r\n\r\nconst heapSort = (array, animations) => {\r\n  let array_len = array.length;\r\n\r\n  for (let i = array_len / 2 - 1; i >= 0; i--) {\r\n    heapify(array, array_len, i, animations);\r\n  }\r\n\r\n  for (let i = array_len - 1; i > 0; i--) {\r\n    let temp = array[0];\r\n    array[0] = array[i];\r\n    array[i] = temp;\r\n    animations.push([\"swap\", 0, array[0]]);\r\n    animations.push([\"swap\", i, array[i]]);\r\n\r\n    heapify(array, i, 0, animations);\r\n  }\r\n};\r\n\r\nconst heapify = (array, n, i, animations) => {\r\n  let largest = i;\r\n  let l = 2 * i + 1;\r\n  let r = 2 * i + 2;\r\n\r\n  if (l < n) {\r\n    animations.push([\"c1\", i, l]);\r\n    animations.push([\"c2\", i, l]);\r\n  }\r\n  if (r < n) {\r\n    animations.push([\"c1\", i, r]);\r\n    animations.push([\"c2\", i, r]);\r\n  }\r\n\r\n  if (l < n && array[l] > array[largest]) {\r\n    largest = l;\r\n  }\r\n  if (r < n && array[r] > array[largest]) {\r\n    largest = r;\r\n  }\r\n  if (largest != i) {\r\n    let temp = array[i];\r\n    array[i] = array[largest];\r\n    array[largest] = temp;\r\n    animations.push([\"swap\", i, array[i]]);\r\n    animations.push([\"swap\", largest, array[largest]]);\r\n\r\n    heapify(array, n, largest, animations);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport \"../css/visualizer.css\";\r\nimport getBubbleSortAnimations from \"./algorithms/bubbleSort.js\";\r\nimport getInsertionSortAnimations from \"./algorithms/insertionSort.js\";\r\nimport getMergeSortAnimations from \"./algorithms/mergeSort.js\";\r\nimport getQuickSortAnimations from \"./algorithms/quickSort.js\";\r\nimport getSelectionSortAnimations from \"./algorithms/selectionSort.js\";\r\nimport getHeapSortAnimations from \"./algorithms/heapSort.js\";\r\n\r\nconst ANIMATION_SPEED = 1;\r\nconst PRIMARY_COLOR = \"\t#1E90FF\";\r\nconst SECONDARY_COLOR = \"rgba(255,215,0,0.80)\";\r\n\r\nexport default class Visualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rand_nums: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.reset();\r\n  }\r\n\r\n  reset() {\r\n    const RAND_NUMS = [];\r\n    for (let i = 0; i < 80; i++) {\r\n      RAND_NUMS.push(randIntInterval(5, 600));\r\n    }\r\n    this.setState({\r\n      rand_nums: RAND_NUMS,\r\n    });\r\n    const arrayBars = document.getElementsByClassName(\"number-bar\");\r\n    for (let i = 0; i < arrayBars.length; i++) {\r\n      arrayBars[i].style.backgroundColor = `rgba(255, 255, 255, 0.85)`;\r\n    }\r\n  }\r\n\r\n  bubbleSort() {\r\n    let animations = getBubbleSortAnimations(this.state.rand_nums);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"number-bar\");\r\n      const isColorChange = i % 4 !== 2 && i % 4 !== 3;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdex] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdex].style;\r\n\r\n        const color = i % 4 === 0 ? PRIMARY_COLOR : SECONDARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, ANIMATION_SPEED * i);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, ANIMATION_SPEED * i);\r\n      }\r\n    }\r\n  }\r\n\r\n  insertionSort() {\r\n    let animations = getInsertionSortAnimations(this.state.rand_nums);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"number-bar\");\r\n      const action = animations[i][0];\r\n      const isColorChange = action == \"c1\" || action == \"c2\";\r\n      if (isColorChange) {\r\n        const [x, barOneIdx, barTwoIdex] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdex].style;\r\n\r\n        const color = action === \"c1\" ? PRIMARY_COLOR : SECONDARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, ANIMATION_SPEED * i);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [x, barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, ANIMATION_SPEED * i);\r\n      }\r\n    }\r\n  }\r\n\r\n  selectionSort() {\r\n    let animations = getSelectionSortAnimations(this.state.rand_nums);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"number-bar\");\r\n      const action = animations[i][0];\r\n      const isColorChange = action == \"c1\" || action == \"c2\";\r\n      if (isColorChange) {\r\n        const [x, barOneIdx, barTwoIdex] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdex].style;\r\n\r\n        const color = action === \"c1\" ? PRIMARY_COLOR : SECONDARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, ANIMATION_SPEED * i);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [x, barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, ANIMATION_SPEED * i);\r\n      }\r\n    }\r\n  }\r\n\r\n  heapSort() {\r\n    let animations = getHeapSortAnimations(this.state.rand_nums);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"number-bar\");\r\n      const action = animations[i][0];\r\n      const isColorChange = action == \"c1\" || action == \"c2\";\r\n      if (isColorChange) {\r\n        const [x, barOneIdx, barTwoIdex] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdex].style;\r\n\r\n        const color = action === \"c1\" ? PRIMARY_COLOR : SECONDARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, ANIMATION_SPEED * i);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [x, barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, ANIMATION_SPEED * i);\r\n      }\r\n    }\r\n  }\r\n\r\n  mergeSort() {\r\n    let animations = getMergeSortAnimations(this.state.rand_nums);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"number-bar\");\r\n      const action = animations[i][0];\r\n      const isColorChange = action == \"c1\" || action == \"c2\";\r\n      if (isColorChange) {\r\n        const [x, barOneIdx, barTwoIdex] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdex].style;\r\n\r\n        const color = action === \"c1\" ? PRIMARY_COLOR : SECONDARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, ANIMATION_SPEED * i);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [x, barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, ANIMATION_SPEED * i);\r\n      }\r\n    }\r\n  }\r\n\r\n  quickSort() {\r\n    let animations = getQuickSortAnimations(this.state.rand_nums);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"number-bar\");\r\n      const isColorChange = i % 4 !== 2 && i % 4 !== 3;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdex] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdex].style;\r\n\r\n        const color = i % 4 === 0 ? PRIMARY_COLOR : SECONDARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, ANIMATION_SPEED * i);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, ANIMATION_SPEED * i);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const nums = this.state.rand_nums;\r\n    const elements = [];\r\n\r\n    for (let i = 0; i < nums.length; i++) {\r\n      elements.push(\r\n        <div\r\n          className=\"number-bar\"\r\n          key={i}\r\n          style={{\r\n            height: `${nums[i]}px`,\r\n          }}\r\n        >\r\n          {\" \"}\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <nav\r\n          class=\"navbar navbar-expand-lg navbar-dark\"\r\n          style={{ backgroundColor: \"black\", paddingLeft: \"5%\" }}\r\n        >\r\n          <a class=\"navbar-brand\" style={{ color: \"white\" }}>\r\n            Sorting Visualizer\r\n          </a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav mr-auto\">\r\n              <li class=\"nav-item dropdown\">\r\n                <a\r\n                  class=\"nav-link dropdown-toggle\"\r\n                  id=\"navbarDropdown\"\r\n                  role=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  Algorithms\r\n                </a>\r\n                <div class=\"dropdown-menu\" style={{ background: \"black\" }}>\r\n                  <a\r\n                    class=\"dropdown-item selection-bar\"\r\n                    onClick={() => this.bubbleSort()}\r\n                  >\r\n                    Bubble Sort\r\n                  </a>\r\n                  <a\r\n                    class=\"dropdown-item selection-bar\"\r\n                    onClick={() => this.insertionSort()}\r\n                  >\r\n                    Insertion Sort\r\n                  </a>\r\n                  <a\r\n                    class=\"dropdown-item selection-bar\"\r\n                    onClick={() => this.selectionSort()}\r\n                  >\r\n                    Selection Sort\r\n                  </a>\r\n                  <a\r\n                    class=\"dropdown-item selection-bar\"\r\n                    onClick={() => this.heapSort()}\r\n                  >\r\n                    Heap Sort\r\n                  </a>\r\n                  <a\r\n                    class=\"dropdown-item selection-bar\"\r\n                    onClick={() => this.mergeSort()}\r\n                  >\r\n                    Merge Sort\r\n                  </a>\r\n                  <a\r\n                    class=\"dropdown-item selection-bar\"\r\n                    onClick={() => this.quickSort()}\r\n                  >\r\n                    Quick Sort\r\n                  </a>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <ul class=\"navbar-nav ml-auto\" style={{ paddingRight: \"5%\" }}>\r\n              <li\r\n                class=\"nav-item\"\r\n                style={{ color: \"white\", cursor: \"pointer\" }}\r\n                onClick={() => this.reset()}\r\n              >\r\n                Generate New Array\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n        <div className=\"bars-container\"> {elements} </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randIntInterval(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction areArraysEqual(array1, array2) {\r\n  if (array1.length !== array2.length) return false;\r\n\r\n  for (let i = 0; i < array1.length; i++) {\r\n    if (array1[i] !== array2[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Visualizer from \"./components/visualizer.js\";\nimport { Component } from \"react\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Visualizer></Visualizer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}